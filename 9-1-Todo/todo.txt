C# Custom Extension Method
C# Extension Methods with Linq

improve performance of c# code
https://docs.microsoft.com/en-us/dotnet/framework/performance/performance-tips

// Boxing and Unboxing
// StringBuilder
// Finalizers === Destructor // ~
Finalizers in C# are methods inside the class used to destroy instances of that class when they are no longer needed. 
The Finalizer is called implicitly by the .NET Framework‚Äôs Garbage collector and therefore programmer has no control as when to invoke the Finalizer. 
An instance variable or an object is eligible for destruction when it is no longer reachable.

c# ref vs out vs in

delegate
event


Inline Styling
JavaScript Object
CSS Stylesheet


/////
Explain the lifecycle methods of components.
getInitialState(): This is executed before the creation of the component.
componentDidMount(): Is executed when the component gets rendered and placed on the DOM.
shouldComponentUpdate(): Is invoked when a component determines changes to the DOM and returns a ‚Äútrue‚Äù or ‚Äúfalse‚Äù value based on certain conditions.
componentDidUpdate(): Is invoked immediately after rendering takes place.
componentWillUnmount(): Is invoked immediately before a component is destroyed and unmounted permanently.
So far, if you have any doubts about the above React interview questions and answers, please ask your questions in the section below.
////

----
In react every class component has mainly three lifecycle phases.
The three phases are: Mounting, Updating, and Unmounting.

1) Mounting : Mounting means putting elements into the DOM.
 a) constructor()
 b) static getDerivedStateFromProps()
 c) render()
 d) componentDidMount()

2) Updating : The next phase in the lifecycle is when a component is updated. 
A component is updated whenever there is a change in the component's state or props.
 a) static getDerivedStateFromProps()
 b) shouldComponentUpdate()
 c) render()
 d) getSnapshotBeforeUpdate()
 e) componentDidUpdate()


3) Unmounting : The next phase in the lifecycle is when a component is removed from the DOM, or unmounting as React likes to call it.
in Unmounting 

React has only one built-in method that gets called when a component is unmounted:
 a) componentWillUnmount(): The componentWillUnmount method is called when the component is about to be removed from the DOM.




What is the virtual DOM?


Every react component hsa state and render method. 

This state here is the data that we want to display when the component is rendered. 

And the render method, as you can tell, is responsible for describing what the Ul should look like. 
The output of this render method is a React element, which is a simple plain JavaScript object that maps to a DOM element. 
It's not a real DOM element. 
It's just a plain JavaScript object that represents that DOM element in memory. 
So react keeps a lightweight representation of the DOM in memory, which we'll refer to as the virtual DOM. 
Unlike the browser or the real DOM, this virtual DOM is cheap to create

when we change the state of a component, we get a new React element. 
React will then compare this element and its children with the previous one. 
It figures out what has changed, and then it will update a part of the real DOM to keep it in sync with the virtual DOM.



So that means when building applications with React, unlike vanilla JavaScript, or Query would no longer have to work with the DOM API in browsers. 
In other words, we no longer have to write code, equate and manipulate the DOM or attach event handlers to DOM elements.
We simply change the state of our components and react will automatically update the DOM to match that state. 

Resume
Developed Proof of concept(POC) applications with Asp.net core web api. and to test published in Azure Web Apps with our azure devops pipeline.
Used Azure Application Insights 
Adaptive Cards
JUST
API conusmeing
Common commponent for error handling
location api ducration checking
telemetry services
dashbord with Azure Application Insights 
cardName




React creates a tree of custom objects representing a part of the DOM. For example, instead of creating an actual DIV element containing a UL element, it creates a React.div object that contains a React.ul object. It can manipulate these objects very quickly without actually touching the real DOM or going through the DOM API. Then, when it renders a component, it uses this virtual DOM to figure out what it needs to do with the real DOM to get the two trees to match.

You can think of the virtual DOM like a blueprint. It contains all the details needed to construct the DOM, but because it doesn't require all the heavyweight parts that go into a real DOM, it can be created and changed much more easily.




Don‚Äôt call Hooks inside loops, conditions, or nested functions. 
üî¥ Do not call Hooks inside conditions or loops.
üî¥ Do not call Hooks after a conditional return statement.
üî¥ Do not call Hooks in event handlers.
üî¥ Do not call Hooks in class components.
üî¥ Do not call Hooks inside functions passed to useMemo, useReducer, or useEffect.

‚úÖ Call them at the top level in the body of a function component.
‚úÖ Call them at the top level in the body of a custom Hook.

//

React Js Interview Question
‚Ä¢ What is React js
‚Ä¢ What is difference between virtual dom and shallow dom, dom in React is
‚Ä¢ What is controlled and uncontrolled component in React is
‚Ä¢ What is hooks in React is
‚Ä¢ What is jsx, babel, webpack
‚Ä¢ What is Redux
‚Ä¢ What is reducer , action, store in Redux
‚Ä¢ What is middleware in Redux
‚Ä¢ Explain data flow in Redux
‚Ä¢ What is Redux-Thunk
‚Ä¢ What is Redux-Saga, Difference between Redux-thunk and Redux-saga
‚Ä¢ Difference between class component and function component
‚Ä¢ How can we implement componentWillUnmount in function component
‚Ä¢ useFffect.UseState.useMemo.useCallback hooks in Details
‚Ä¢ Explain lifecycle method in React js
‚Ä¢ What is difference between export default and export in React is
‚Ä¢ What is portal in React is
‚Ä¢ What is reconciliation in React is
‚Ä¢ What is useRef in React is
‚Ä¢ What is server side render in React is
‚Ä¢ What is useStrict in React is
‚Ä¢ What is fragment in React js
‚Ä¢ What is react router in React is
‚Ä¢ What is node module in React is
‚Ä¢ What is the default localhost server port in react js.
‚Ä¢ how can we change the local server port
‚Ä¢ What is high order component in React is
‚Ä¢ What is pure component in React is
‚Ä¢ What is difference state and props in React is
‚Ä¢ How to optimize React is app
‚Ä¢ What is difference between React js and Angular js
‚Ä¢ What is prop drilling in React js how to overcome it
‚Ä¢ What is context api in React is
‚Ä¢ What is super, constructor , render function in React is